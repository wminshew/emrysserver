apiVersion: v1
kind: Service
metadata:
  name: sqlproxy-svc
  labels:
    app: sqlproxy
  namespace: emrys-prod
  # annotations:
    # cloud.google.com/neg: '{"ingress": true}' # container-native load balancing
spec:
  selector:
    app: sqlproxy
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlproxy-deploy
  labels:
    app: sqlproxy
  namespace: emrys-prod
spec:
  minReadySeconds: 60
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: sqlproxy
  template:
    metadata:
      labels:
        app: sqlproxy
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      containers:
      - name: sqlproxy-container
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        securityContext:
          runAsUser: 2 # non-root
          allowPrivilegeEscalation: false
          capabilities:
            drop: ['all']
        resources:
          requests:
            cpu: 50m
            memory: "50Mi"
          limits:
            cpu: 50m
            memory: "50Mi"
        command: ["/cloud_sql_proxy",
        "-instances=emrys-12:us-central1:emrysserver-psql=tcp:127.0.0.1:5433",
          "-credential_file=/secrets/cloudsql/credentials.json",
          "-log_debug_stdout=true"]
        ports:
        - containerPort: 5433
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      - name: pgbouncer
        image: edoburu/pgbouncer:1.8.1
        securityContext:
          # runAsUser: 2 # non-root
          allowPrivilegeEscalation: false
          capabilities:
            drop: ['all']
        resources:
          requests:
            cpu: 150m
            memory: "300Mi"
          limits:
            cpu: 150m
            memory: "300Mi"
        ports:
        - name: postgres
          containerPort: 5432
        env:
        - name: DB_HOST
          value: "localhost"
        - name: DB_NAME
          value: "emrysserver"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_PORT
          value: "5433"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DEFAULT_POOL_SIZE
          value: 20
        - name: LISTEN_BACKLOG
          value: 4096
        - name: LISTEN_PORT
          value: "5432"
        - name: MAX_CLIENT_CONN
          value: 1000
        - name: MAX_DB_CONNECTIONS
          value: 20
        - name: MIN_POOL_SIZE
          value: 5
        - name: POOL_MODE
          value: transaction
        - name: SERVER_RESET_QUERY
          value: DISCARD ALL
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 60
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 60
        lifecycle:
          preStop:
            exec:
              # Allow existing queries clients to complete within 120 seconds
              command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
