apiVersion: v1
kind: Service
metadata:
  name: registry-svc
  labels:
    app: registry
  namespace: emrys-prod
  annotations:
    cloud.google.com/neg: '{"ingress": true}' # container-native load balancing
    beta.cloud.google.com/backend-config: '{"ports": {"http":"registry-backendconfig"}}'
spec:
  selector:
    app: registry
  type: NodePort
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
    protocol: TCP
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: registry-backendconfig
  namespace: emrys-prod
spec:
  timeoutSec: 320
  connectionDraining:
    drainingTimeoutSec: 330
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-deploy
  labels:
    app: registry
  namespace: emrys-prod
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      containers:
      - name: registry-container
        image: gcr.io/emrys-12/registry:latest
        securityContext:
          runAsUser: 2 # non-root
          allowPrivilegeEscalation: false
          capabilities:
            drop: ['all']
        resources:
          requests:
            cpu: 100m
            memory: "200Mi"
          limits:
            cpu: 100m
            memory: "200Mi"
        ports:
        - containerPort: 5000
        env:
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secret
              key: secret
        - name: DB_NAME
          value: "emrysserver"
        - name: DB_NETLOC
          value: "sqlproxy-svc"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/secrets/google_application_credentials/credentials.json"
        - name: DEBUG_CORS
          value: "false"
        - name: DEBUG_LOG
          value: "false"
        - name: REGISTRY_HOST
          value: "127.0.0.1:5001"
        volumeMounts:
          - name: registry-creds
            mountPath: /secrets/google_application_credentials
            readOnly: true
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      - name: registry
        image: registry:2.6.2
        args: [ "/etc/docker/registry/registry-config.yaml" ]
        securityContext:
          runAsUser: 2 # non-root
          allowPrivilegeEscalation: false
          capabilities:
            drop: ['all']
        resources:
          requests:
            cpu: 100m
            memory: "500Mi"
          limits:
            cpu: 100m
            memory: "500Mi"
        ports:
        - containerPort: 5001
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: registry-secret
              key: secret
        # - name: REGISTRY_LOG_LEVEL
        #   value: "DEBUG"
        - name: REGISTRY_LOG_FIELDS_ENVIRONMENT
          value: "production"
        volumeMounts: 
          - name: registry-creds
            mountPath: /secrets/google_application_credentials
            readOnly: true
          - name: registry-config
            mountPath: /etc/docker/registry
      volumes:
      - name: registry-creds
        secret:
          secretName: registry-creds
      - name: registry-config
        configMap:
          name: registry-registry-config
