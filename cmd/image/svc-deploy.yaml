apiVersion: v1
kind: Service
metadata:
  name: image-svc
  labels:
    app: image
spec:
  selector:
    app: image
  type: NodePort
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-deploy
  labels:
    app: image
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: image
  template:
    metadata:
      labels:
        app: image
    spec:
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      containers:
      - name: image-container
        image: gcr.io/emrys-12/image:latest
        resources:
          requests:
            cpu: 50m
            memory: "100Mi"
          # limits:
          #   cpu: 250m
          #   memory: "500Mi"
        ports:
        - containerPort: 8080
        env:
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secret
              key: secret
        - name: DB_NAME
          value: "emrysserver"
        - name: DB_NETLOC
          value: "sqlproxy-svc"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DEBUG_CORS
          value: "false"
        - name: DEBUG_LOG
          value: "false"
        - name: DEVPI_HOST
          value: "http://devpi-svc:3141"
        - name: DOCKER_API_VERSION
          value: "1.37"
        - name: DOCKER_HOST
          value: "tcp://127.0.0.1:2375"
        - name: DOCKER_PATH
          value: "/Dockerfiles/base-dockerfile"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/secrets/google_application_credentials/credentials.json"
        - name: REGISTRY_HOST
          value: "127.0.0.1:5000"
        volumeMounts:
          - name: image-creds
            mountPath: /secrets/google_application_credentials
            readOnly: true
          - name: base-dockerfile
            mountPath: /Dockerfiles
            readOnly: true
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          # initialDelaySeconds: 30
          initialDelaySeconds: 60
          # periodSeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
          # failureThreshold: 7
      - name: dind-daemon 
        image: docker:18.03.1-ce-dind 
        resources:
          requests:
            cpu: 50m
            memory: "500Mi"
          # limits:
          #   cpu: 500m
          #   memory: "2Gi"
        securityContext: 
          privileged: true 
        ports:
        - containerPort: 2375
        env:
        - name: REGISTRY_HOST
          value: "127.0.0.1:5000"
        volumeMounts: 
          - name: docker-graph-storage 
            mountPath: /var/lib/docker 
      - name: registry
        image: registry:2.7.1
        args: [ "/etc/docker/registry/registry-config.yaml" ]
        resources:
          requests:
            cpu: 50m
            memory: "500Mi"
          # limits:
          #   cpu: 500m
          #   memory: "2Gi"
        ports:
        - containerPort: 5000
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: registry-secret
              key: secret
        # - name: REGISTRY_LOG_LEVEL
        #   value: "DEBUG"
        - name: REGISTRY_LOG_FIELDS_ENVIRONMENT
          value: "production"
        volumeMounts: 
          - name: image-creds
            mountPath: /secrets/google_application_credentials
            readOnly: true
          - name: registry-config
            mountPath: /etc/docker/registry
            readOnly: true
      volumes:
      - name: image-creds
        secret:
          secretName: image-creds
      - name: docker-graph-storage
        emptyDir: {}
      - name: registry-config
        configMap:
          name: image-registry-config
      - name: base-dockerfile
        configMap:
          name: base-dockerfile
